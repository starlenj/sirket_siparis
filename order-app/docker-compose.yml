version: "3.8"
services:
  user-microservice:
    build:
        context: ./user-microservice
    volumes: 
      - ./user-microservice:/src/  
      - nodemodules:/src/node_modules
    command: npm run start:debug
    links:
      - postgres 
      - redis
    environment: 
        DATABASE_URL: postgres://user:password@postgres:5432/user-db
        NODE_ENV: development
        JWT_SECRET: secret 
    ports:
      - "4001:4001"
      - "9229:9229"
    networks : 
      - backend
  category-microservice:
    build:
        context: ./category-microservice
    volumes: 
      - ./category-microservice:/src/  
      - nodemodules:/src/node_modules
    command: npm run start:dev
    links:
      - postgres 
      - redis
    environment: 
        DATABASE_URL: postgres://user:password@postgres:5432/category-db
        NODE_ENV: development
    ports:
      - "4000:4000"
      - "9231:9229"
    networks : 
      - backend
  sube-microservice:
    build:
        context: ./sube-microservice
    volumes: 
      - ./sube-microservice:/src/  
      - nodemodules:/src/node_modules
    command: npm run start:dev
    links:
      - postgres 
      - redis
    environment: 
        DATABASE_URL: postgres://user:password@postgres:5432/sube-db
        NODE_ENV: development
        JWT_SECRET: secret 
    ports:
      - "4002:4002"
      - "9230:9229"
    networks : 
      - backend
  customer-microservice:
    build:
        context: ./customer-microservice
    volumes: 
      - ./customer-microservice:/src/  
      - nodemodules:/src/node_modules
    command: npm run start:dev
    links:
      - postgres 
      - redis
    environment: 
        DATABASE_URL: postgres://user:password@postgres:5432/customer-db
        NODE_ENV: development
        JWT_SECRET: secret 
    ports:
      - "4003:4003"
      - "9232:9229"
    networks : 
      - backend
  option-microservice:
    build:
        context: ./option-microservice
    volumes: 
      - ./option-microservice:/src/  
      - nodemodules:/src/node_modules
    command: npm run start:dev
    links:
      - postgres 
      - redis
    environment: 
        DATABASE_URL: postgres://user:password@postgres:5432/option-db
        NODE_ENV: development
        JWT_SECRET: secret 
    ports:
      - "4004:4004"
      - "9233:9229"
    networks : 
      - backend
  admin-panel:
    build:
        context: ./admin-panel
    volumes: 
      - ./admin-panel:/src/  
      - nodemodules:/src/node_modules
    command: npm run start
    ports:
      - "3000:3000"
    networks : 
      - backend
  api-gateway:
    build:
        context: ./api-gateway
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:  
      - user-microservice
      - category-microservice
      - sube-microservice
    environment:  
      user_service_url: http://user-microservice:4001/api/v1 
      category_service_url: http://category-microservice:4000/api/v1 
      sube_service_url: http://sube-microservice:4002/api/v1 
      customer_service_url: http://customer-microservice:4003/api/v1 
      option_service_url: http://option-microservice:4004/api/v1 
  postgres:
    image: postgres:10.4 
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-db
    ports:
      - "35000:5432"
    networks : 
      - backend
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 127.0.0.1:1234:80
    environment:
      PGADMIN_DEFAULT_EMAIL: emreatessoy@gmail.com
      PGADMIN_DEFAULT_PASSWORD: emre0209
    networks:
      - backend
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
networks:
  frontend:
  backend:
volumes:
    nodemodules: {}
